extends sh

snippet shtmpl "sh template"
#!/usr/bin/env bash

set -o nounset
set -o errexit
trap 'echo "Aborting due to errexit on line \$LINENO. Exit code: \$?" >&2' ERR
set -o errtrace
set -o pipefail
IFS=\$'\n\t'

endsnippet

snippet sht "sh template"
#!/usr/bin/env bash

set -o nounset
set -o errexit
trap 'echo "Aborting due to errexit on line \$LINENO. Exit code: \$?" >&2' ERR
set -o errtrace
set -o pipefail
IFS=\$'\n\t'

__ME=\$(basename \$0)
__ScriptVersion="$1"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
  echo "Usage :  \${__ME} [options] [--]
    Prerequisite
      - $2

    Options:
    -h|help       Display this message
    -v|version    Display script version"

}

#===  FUNCTION  ================================================================
#         NAME:  _main
#===============================================================================
function _main() {
  echo "Hello Bash"
}

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

while getopts ":hv" opt
do
  case \$opt in

  h|help     )  usage; exit 0   ;;

  v|version  )  echo "\${__ME} -- Version \$__ScriptVersion"; exit 0   ;;

  * )  echo -e "\n  Option does not exist : \$OPTARG\n"
      usage; exit 1   ;;

  esac    # --- end of case ---
done
shift \$((\$OPTIND-1))
_main
endsnippet


snippet func "sh function"
#===  FUNCTION  ================================================================
#         NAME: ${1:function_name}
#  DESCRIPTION: ${2:description}
#    ARGUMENTS: \$1 ${3:description}
#               \$2 ${4:description}
#===============================================================================
function $1() {
  ${0:VISUAL}
}

endsnippet
